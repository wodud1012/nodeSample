1. 서버 항상 동작시
 >$pm2 start server.js
2. Ubuntu 터미널 명령어
pwd 
설명 : 현재 작업 디렉토리를 절대 경로 명으로 출력한다. 

ls [옵션] [파일명] 
설명 : 윈도우 도스창의 'dir' 명령과 같은 명령으로, 
현재 디렉토리 내의 파일과 디렉토리에 대한 정보를 출력해준다. 
 [옵션]에는 -로 시작하여 아래와 같은 옵션을 지정할 수 있으며 
두 개 이상의 옵션을 동시에 지정할 수 있다. 
 [파일명]에는 파일명이나 디렉토리명을 지정할 수 있다. 

옵션 
-a 디렉토리 내의 모든파일(.으로 시작되는 파일 포함)을 출력 
-i 파일의 아이노드(inode)번호를 출력 
-h 파일의 크기를 쉬운 단위로 표시(k: 킬로바이트, m: 메가바이트) 
-l 파일의 다양한 정보를 함께 출력(소유자 정보, 권한 정보, 크기, 날짜) 
-m 파일을 쉼표로 구분하여 가로로 출력 
-s kb 단위의파일크기를 출력 
-t 파일을 최근에 생성된 시간순으로 출력 
-F 파일의 형태와 함께 출력한다('*' : tlfgodvkdlf, '@' : 심볼릭링크, '/' : 디렉토리) 
-R 서브 디렉토리의 내용을 포함하여 출력(즉 하위 디렉토리 내용을 모두 출력) 
-S 파일을 크기순으로 출력 
--help 도움말 출력 

cd [디렉토리명] 
설명 : cd(change directory) 작업 디렉토리를 바꾼다. 

옵션 
cd [엔터] 홈 디렉토리로 이동 
cd ~ 또는 cd ~/ 홈 디렉토리로 이동 
cd ~userid userid의 홈 디렉토리로 이동 
cd ~/path/path2 홈 디렉토리 아래 path/paht2로 이동 
cd - 바로 앞에 작업한 디렉토리로 이동 
cd directory 지정한 directory로 옮겨진다 
cd / root directory로 옮겨진다. 
cd .. 현재 작업 directory의 parent directory로 옮겨진다. 

작업하고 있는 경로를 기억시킨 뒤 나주에 다시 그 경로로 돌아오려면, 'pushd /겨로/'(현재 경로 기억 예 : pushd .) 하여 경로를 기억시킨 뒤 popd라는 명령을 주면 기억한 경로로 돌아간다. 이 명령은 한 번만 쓸 수 있다. 

cp [옵션] [원본파일명] [목적 파일명 / 디렉토리명] 
설명 : 도스창의 'copy'명령과 같은 명령으로 하나 이상의 원본 파일을 목적 파일이나 디렉토리로 복사한다. [원본 파일명]에는 하나 이상의 파일명을 지정할 수 있고 [목적 파일명 / 디렉토리명]에는 복사될 목적 파일명이나 복사된 파일이 위치할 목적 디렉토리를 지정할 수 있다. [옵션]에는 아래와 같은 옵션을 지정할 수 있다. 

옵션 
-i 파일 복사시 동일 파일명이 있을시에 사용자에게 덮어 쓸 것인지를 물어봄 
-f 동일파일명 발생시에도 모두 강제적으로 복사함 
-p 원본 파일의 시간 및 소유 권한 보존 
-r 포함된 자식 디렉토리까지 모두 복사 

mkdir [옵션] [파일명] 
설명 : 새로운 디렉토리를 만든다. write permission이 허용되어야만 directory를 만들 수 있다. 

옵션 
-p 만들고자하는 디렉토리의 상위 디렉토리가 없는 경우 상위 디렉토리까지 같이 만든다. 

rmdir [옵션] [파일명] 
설명 : 디렉토리를 제거하기 위한 명령어, whrite permission이 허용되어야만 directory를 제거할수 있다. 

옵션 
-p 제거된 디렉토리에 대한 메시지가 표시됨 
-s 제거된 디렉토리에 대한 메시지가 표시되지 않음.(Default) 

more [파일명] 
설명 : 한 화면씩 보기. 유닉스에서 커다란 텍스트 파일을 보는 것이나 많은 수의 파일과 서브디렉토리를 포함하는 디렉토리의 리스트를 보이게 하는 것은 아주 빠른 속도로 화면이 넘어가게 한다. 이럴 경우에 more나 pg 명령을 사용하여서 한 하면씩 보이게 할 수 있다. more filename을 입력하면 filename으로 지정한 파일을 한번에 한 화면에 해당하는 양 만큼씩 보여준다. 또한 출력을 more 명령으로 파이프(redirect) 시킬 수도 있다. 예를 들면 ls -al |more 는 ls 명령의 출력을 more로 보내어서 리스팅을 한 페이지씩 보이게 한다. more를 사용해서 파일을 살펴보는 일반적인 방법은 다음과 같다. 

옵션 
스페이스, Ctrl-D 다음 한 화면을 보여줌 
엔터 누를 때마다 화면의 아래쪽에 한 줄씩 더 보여줌 
q more 정지 
h 도움말 
/expr expression 검색 

rm [옵션] [파일명] 
설명 : rm(remove) 파일(디렉토리)을 삭제한다. 삭제하고자 하는 디렉토리에 파일이나 부 디렉토리가 없어야만 삭제가 가능하다. 

옵션 
-f 디렉토리 안의 파일을 삭제할 때 사용자에게 확인을 요구하지 않음 
-r 인수 list 에서 지정한 디렉토리 혹은 그 아래의 subdirectory를 삭제 
-i whrite permission 이 없는 파일의 삭제를 위해 대화식으로 확인 
-p 디렉토리 dir-name과 비어있는 부모 디렉토리를 사용자가 제거할 수 있으며, 전체 경로명이 삭제 되거나 어떤 이유로 인해 경로명의 일부가 남은것과 무관하게 표준출력에 메세지가 출력됨 
-s -p 선택항목 지정시 표준오류에 출력되는 메시지를 삭제 

mv [옵션] [파일명] 
설명 : mv 명령은 파일의 위치를 바꾸거나 이름을 바꾸는데 사용을 한다. mv 명령은 이미 존재하는 파일을 덮어쓰기를 한다. 'mv file1 file2'라고 입력을 하는 것은 file1의 이름을 file2라고 바꾼다. 만약 file2 라는 파일이 이미 존재한다면 file1의 내용물로 교체가 된다. 파일을 한 디렉토리에서 다른 디렉토리로 옮기기 위하여서는 경로를 함께 입력하여 주면 된다. 같은 이름의 파일이 이미 존재하여서 그것을 덮어쓰기를 하지 않으려면 -i 옵션을 사용하면 된다. 한번에 여러 개의 파이을 옮길수도 있다. 마지막이 파일들을 옮겨 넣고자 하는 디렉토리이기만 하면 되는 것이다. 예를 들면 'mv profit sales.txt wrksht repotrs'라고 하면 profit sales.txt wrksht를 모두 reports 디렉토리로 이동시킨다. 

옵션 
-f 대상 파일이 존재할 대 새로운 파일로 대체 
-i 대상파일이 있을 때 확인 후 작업 
-f 파일의 이동 과정을 보여준다. 

find [옵션] [파일명] 
설명 : 이제는 find라는 명령어를 알아보자. find라는 명령어는 매우 융통성이 있고 강력한 명령어이다. 파일을 이름, 수정날짜, 소유주, 허가 등을 기준으로 하여 검색하게 해준다. 

옵션 
-name filename filename과 일치하는 파일을 찾음(*,? 또는 and가 사용될 수 있으며 이들은 따옴표 안에 표시를 하거나 백슬래시를 앞에 주고 사용함) 
-print 현재의 경로 이름을 표시 

grep [옵션] [패턴] [파일명] 
설명 : grep 명령을 사용하면 파일 내부에 있는 텍스트의 내용으로 파일을 찾을 수 있다. 지정한 문자들을 포함하는 행을 찾을 때마다 그 행을 화면에 표시한다. 만약 grep 하나 이상의 파일을 검색중이라면 그 문자들이 있는 파일의 이름을 표시한다. 

옵션 
-c 파일 내에서 패턴과 일치하는 줄의 총수를 구한다. 
-h 여러 개의 파일을 검색할 때, 출력에 파일명이 나타나는 것을 방지한다. 
-i 대, 소문자를 구별하지 않는다 
-n 일치하는 줄의 줄 번호도 같이 출력한다 
-v 패턴과 일치하지 않는 줄만 출력한다 

head [-카운트] [파일명] 
설명 : 파일의 첫 부분부터 카운트로 정한 숫자만큼의 줄 수를 보여주는 명령으로 카운트 징정을 안 하면 디폴트로 10이 된다. 

tail [-카운트] [파일명] 
설명 : 파일의 카운트로 정한 숫자만큼의 끝 부분 줄 수를 보여주는 명령으로 카운트를 지정을 안하면 디폴트로 10이 된다. 

mount [-t 파일시스템] [장치명] [마운트디렉토리] 
설명 : 각 운영체제나 혹은 CDROM같은 경우에는 저마다 자신의 파일 시스템을 사용하고 있다. 마운트라는 것은 특정 디렉토리에 자신이 원하는 파일 시스템을 연결하여 리눅스에서 볼 수 있는 명령이다. 

리눅스의 파일 시스템 : ext2, ext3, ext4 
윈도우 파일 시스템 : vfat, ntfs 
CDROM의 파일 시스템 : ISO9660 

du 
설명 : 사용자 자신의 디스크 사용 상황을 보고해 준다.(단위=Block) 

cat [파일명] 
설명 : 파일의 내용을 보거나 표준입력(키보드)으로 입력된 문자들을 파일로 저장할 때 쓰는 명령이다. 

diff 
설명 : diff(differential file comparator) 두개의 파일이 일치되도록 변경시키기 위한 정보를 제공해 줌. 

rpm  [옵션] [파일명] <-- rpm명령어는 redhat 배포본 관련 패키지 명령어입니다.  
설명 : 패키지를 설치 및 업그레이드 

옵션 
-i, -U 설치 및 업그레이드 옵션 
-e 패키지의 제거 
-q 패키지 질의 
-V 패키지 검증 

만약 시스템에 설치되어 있는 패키지를 설치하려 한다면 -i 옵션을 -U 옵션을 써야한다. 
만약 rpm -e rpm 명령을 실해하면 rpm 은 사라지기 때문에 절대로 하지 말아야 한다. 
만약 지웠다면 www.rpm.org 에 가서 rpm 소스를 가져다 설치하는 수밖에 없다. 

gzip [옵션] [파일명] 
설명 : 리눅스에서 사용하는 압축 프로그램으로 속도 면에서나 압축률 면에서나 상당히 좋은 프로그램이다. 

옵션 
-d 압축을 해제하는 옵션 
-f 압축을 하거나 해제할 때 같은 이름의 파일이 존재할 경우 덮어쓰기를 한다. 
-l 압축파일의 정보를 보여 준다. 
-r 압축 대상의 디렉토리까지 압축을 수행한다. 

하나의 파일밖에 압축을 못한다. 

tar [옵션] [파일명] 
설명 : tar 명령어는 여러 파일을 하나로 묶는데 사용한다. tar는 파일을 압축하지 않지만 gzip와 같이 쓰면 매우 효과적이다. 

옵션 
c 새로운 tar파일의 생성 
x 기존의 tar파일을 푸는데 사용 
u 업데이트를 위한 옵션 
t tar파일을 푸는 것이 아니라 내용을 보는 옵션 
v 파일을 묶거나 풀때의 작업을 보여주는 옵션 
z gzip를 이용해 tar.gz 혹은 .tgz로 묶인 파일을 풀 때 사용하는 옵션 

more [-ncdflspu] [+줄번호] [파일이름(들)] 
설명 : 한 화면씩 출력을 보여주는 유틸리티로 한 번에 전체적으로 볼수 없는 파일은 이것을 사용하여 스크롤을 제어할 수 있다. 

옵션 
-n 여기서 n은 숫자를 의미하며, 숫자는 출력 윈도우의 행수를 지정한다. 
-c 위에서부터 한 행씩 지운 후 한 행씩 출력한다. 보통은 화면 전체를 지운후 각 행을 출력하기 시작한다. 특정한 터미널을 위해 사용 
-d 스페이스나 q 키를 누르라는 프롬프트를 출력 
-f 화명의 행이 아닌 논리적인 행 수를 계산한다. 보통은 긴 칼럼의 행은 화면에서 행바꿈을 하여 새로운 행으로 계산된다. -f 옵션을 사용하면 이러한 행은 계산하지 않는다. 
-s 여러개의 빈 공백행은 하나로 취급한다. 
-p 스크롤하지 않는다. 대신 화면을 지우고 출력한다. 
-u 밑줄 치기를 금지 한다. 

return 한줄만 스크롤 
D 빈 페이지만 뒤로 이동 
space 한 페이지만 뒤로 이동 
B 한 페이지 앞으로 이동 
H 도움말을 제공 
V vi 에디터를 부름 
Q 종료 

touch [-amc] [MMDDhhmmYY] [파일명] 
설명 : 파일의 액세스 시간이나 갱신 시간을 수정 

옵션 
-a 파일의 액세스 시간을 바꿈 
-m 파일의 갱신 시간을 바꿈 
-c 파일명이 존재하지 않는다면 새로운 파일을 만들지 않음 
YY 연도 
DD 날짜 
hh 시간 
mm 분 

fdisk [-l] [-v] [-s partition] [device] 
설명 : 디스크의 파티션을 변경한다. 

옵션 
-l 파티션 테이블의 목록을 출력 
-v fdisk 버전 출력 
-s partition DOS 파티션이 아니라면 해당 파티션의 크기를 출력 
device device 에는 몇번째 하드디스크를 파티션 할것인지 알려주어야 한다. 아래는 리눅스에서 각각의 디바이스들에 대한 이름이다. 

첫번째 설치된 하드 드라이브 : fdisk /dev/hda 
두번째 설치된 하드 드라이브 : fdisk /dev/hdb 
SCSI의 첫번째 하드 드라이브 : fdisk /dev/sda 
SCSI의 두번째 하드 드라이브 : fdisk /dev/sdb 

'm' 명령어로 도움말을 볼수 있다. 

ps 
설명 : 현재 자신의 리눅스 서버에서 어떤 프로세스들이 활동하고 있는지 살펴보고자 할떄 'ps' 명령을 사용하는 것이 일반적이다. ps 명령을 사용하면 현재 자신이 실행한 프로세스의 목록을 살펴볼수 있으며, '-aux' 옵션을 사용하면 시스템에서 동작중인 모든 프로세스를 살필수 있다. 

사용키 
<Space> 상황 즉시 갱신 
<s> 갱신 시간 지정(초 단위) 

CPU 사용률 기준으로 정렬 
<M> 메모리 사용률 기준으로 정렬 
<u> 지정한 사용자의 프로세스만 나타남 
<k> 지정한 프로세스 kill 
<h> 도움말 

passwd [옵션] [계정] 
설명 : 사용자 계정의 패스워드를 등록하거나 변경시키는 경우 이용되는 명령어이며 특히 슈퍼유저는 다른 유저의 패스워드도 변경할수 있다. 

옵션 
-l 사용자의 계정에 lock을 건다. 
-d 사용자의 계정에 패스워드를 해체. 즉 패스워드 없이 로그인이 가능해 진다. 

chmod [옵션] [파일명, 디렉토리] 
설명 : 파일의 권한을 바꾸는 명령어 

옵션 
-R 서브디렉토리까지 모든 파일의 권한을 바꾼다. 

chgrp [옵션] 
설명 : 파일의 그룹을 바꾸는 명령어 

옵션 
-R 서브디렉토리까지 모든 파일의 그룹을 바꾼다. 

chown [옵션] [파일명] 
설명 : 파일의 소유자를 바꾸는 명령어 

옵션 
-R 서브디렉토리까지 모든 파일의 소유자를 바꾼다. 

jobs 
설명 : 현재 진행중인 작업들을 출력 

옵션 
-l 현재 작업하고 있는 디렉토리와 프로세스 그룹 ID를 출력 

fg 
설명 : 작업을 전명 작업으로 변환하는 것으로 전면 작업이란 모니터에 실행되는 모습을 사용자에 직접 보이며 작업하는 것을 말한다. 

bg 
설명 : 작업을 후면 작업으로 전화하는 것으로, 후면 작업이란 전면 작업과는 반대로 사용자의 눈에는 실행되는 모습을 보이지 않으면서도 실제로는 일을 하는 것을 말한다. 백그라운드 작업은 "명령어 &"로 명령어 다음에 "&" 표시를 붙여서 후면 작업으로 전환할 수 있도록 되어 있다. 

date [yymmddhhmm [ss] ] 
설명 : date는 위아 같이 주어진 인수가 없다면 현재 시스템의 시간과 날짜를 출력한다. 만약 주어지는 인자가 있다면 그에 따라서 시스템의 시간과 날짜를 변경한다. 
yy는 연도를 나타내는 두 숫자이며, mm은 월을 나타낸다. 그리고 dd는 날짜, hh는 24시간 단위로 표현되는 시견이며, mm은 분을 의미한다. 끝의 ss는 초를 의마하는 부분으로 명시하지 않아도 상관없는 부분이다. 

cal [-jy] [ [달] 연도] 
설명 : 서기 원년부터 9999년까지의 달력을 볼 수 있다. 
인수를 하나만 준다면 그 숫자는 연도를 의미하는 것으로 간주된다. 두 개의 숫자를 준다면 앞의 것을 월, 그 다음은 연도를 의미한다. 

옵션 
-j 1월 1일 부터 날짜 수를 계산하는 julian 날짜를 표시 
-y 올해의 달력을 표시 

kill [-signalID] PID 
설명 : kill 명령은 프로세서를 죽이는 데에 사용된다. 그래서 이 유틸리티의 이름도 kill이 되었다. 

옵션 
-signalID 프로세서에게 보낼 시그널을 지정한다. 시그널은 번호로 지정될 도 있고 시그널 이름으로 지정될 수도 있다. 
-l 시그널 종류를 나열한다. 시그널의 종류는 시그널 번호 순서대로 이름으로 나열된다. 

finger [-slpm] [사용자] 
설명 : 시스템 상의 사용자들에 대한 정보를 보여준다. 
인수로 아무 것도 주어지지 않으면, finger는 현재 시스템에 로그인되어 있는 사용자들을 보여준다. 

옵션 
-s 사용자의 로그온 이름, 실제 이름, 터미널 이름, 로그온 시간 등등을 보여줌 
-l -s 옵션 정보에 몇 가지를 추가하여, 여러 줄에 걸쳐서 보여줌 
-p -l 옵션 정보에서 .plan과 .project 파일을 보이지 않는다. 

su [-] [사용자ID][인수] 
설명 : 다른 사용자 계정으로 서브 쉘을 생성하는 것으로, 잠시동안 다른 사용자 계정으로 작업할 필요가 있을때 사용한다. 
많은 사람들이 su가 'super user'를 의미하는 말로 생각하지만, 사실은 'substitute user'를 의미하는 말이다. 

옵션 
- 하이픈(-)을 사용하면 새로운 쉘로 로그인할 때 자신의 로그인 과정을 수행한다. 옵션이 주어지지 않으면 새로운 쉘은 단지 쉘 역할을 수행할 뿐이다. 

shutdown [옵션] 시간 [메세지] 
설명 : 시스템을 종료할 때 일반적으로 사용되는 명령어 

옵션 
-t n t 옵션 뒤에 n초를 명시해서, 경고 메시지를 보낸후 n초 후에 kill 시그널을 보냄 
-h shutdown시 halt를 실행 
-r 시스템 종료를 완료하고 나서 다시 부팅 과정을 수행(리부팅) 
-c 이미 예약되어 있는 shutdown을 취소 
-k 모든 동작을 제대로 수행하지만 시스템을 종료할 시간이 되면 아무것도 하지 않음. ksms 'just kidding'의 의미 